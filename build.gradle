import com.bmuschko.gradle.cargo.convention.Deployable
import com.bmuschko.gradle.cargo.tasks.remote.CargoRedeployRemote

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE"
        classpath 'org.hsqldb:hsqldb:2.3.2'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.2'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'jacoco'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo-base'

defaultTasks "clean", "build", "jacocoTestReport"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile) each { it.options.encoding = defaultEncoding }
tasks.withType(GroovyCompile) each { it.groovyOptions.encoding = defaultEncoding }

project.ext {
    artifactId = 'mybatis-boot'
    springBootVersion = '1.4.0.RELEASE'
    groovyAllVersion = '2.4.3'
    spockVersion = '1.0-groovy-2.4'
}

repositories {
    jcenter()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion")

    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"

    compile 'org.mybatis:mybatis:3.2.8'
    compile 'org.mybatis:mybatis-spring:1.2.2'
    compile 'org.flywaydb:flyway-core:3.2.1'
    runtime 'org.hsqldb:hsqldb:2.3.2'

    compile 'org.projectlombok:lombok:1.16.4'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.0'

    compile 'net.logstash.logback:logstash-logback-encoder:4.7'

    testCompile "org.codehaus.groovy:groovy-all:$groovyAllVersion"
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "org.spockframework:spock-spring:$spockVersion"
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"

    testCompile 'com.github.groovy-wslite:groovy-wslite:1.0.0'
    testCompile 'cglib:cglib-nodep:3.1'
}

task wrapper(type: Wrapper) { gradleVersion = '2.4' }

eclipse {
    pathVariables GRADLE_REPO: file(System.properties['user.home'] + '/.gradle/cache')
    wtp {
        component {
            contextPath = 'myapp'
        }
//        facet {
//            facet name: 'java', version: '1.8'
//            facet name: 'jst.web', version: '3.0'
//        }
    }
}

flyway {
    url = 'jdbc:hsqldb:file:db/test'
}

jacoco {
    toolVersion = '0.7.4.201502262128'
    reportsDir = file("${project.buildDir}/reports/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${project.buildDir}/reports/jacocoHtml"
    }
}

bootRun {
    // gradlew bootRun -Pargs="--spring.profiles.active=prod"
    // で起動するとapplication.ymlの値にsrc/main/resources/application-prod.yml
    // の値を上書きして稼働する
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

task deploy(type: CargoRedeployRemote) {
  containerId = 'tomcat8x'
  hostname = '192.168.33.10'
  port = 8080
  username = 'admin'
  password = 'admin'

  def warFile = file('build/libs/spring-boot-mybatis.war')
  deployables = [new Deployable(file: warFile, context: 'example')]
}
